"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deploy = void 0;
const fs_1 = require("fs");
const path_1 = require("path");
const ssr_server_utils_1 = require("ssr-server-utils");
const cwd = ssr_server_utils_1.getCwd();
const deploy = async (argv) => {
    if (!await ssr_server_utils_1.isFaaS(true)) {
        console.log('检测到当前为首次发布，根目录下缺少 template.yml 文件，自动创建默认 yml 文件模版');
        const ymlContent = await fs_1.promises.readFile(path_1.join(cwd, './node_modules/ssr-plugin-nestjs/src/f.yml'));
        await fs_1.promises.writeFile(path_1.join(cwd, './template.yml'), ymlContent);
        const bootstrapContent = await fs_1.promises.readFile(path_1.join(cwd, './node_modules/ssr-plugin-nestjs/src/bootstrap.tpl'));
        await fs_1.promises.writeFile(path_1.join(cwd, './bootstrap'), bootstrapContent);
    }
    try {
        if (argv.tencent) {
            await deployTencent();
        }
        else {
            await deployAliyun(argv);
        }
    }
    catch (error) {
        console.error(error);
    }
};
exports.deploy = deploy;
const deployTencent = () => {
    console.log(' Nest.js 暂不支发布到腾讯云');
};
const deployAliyun = async (argv) => {
    console.log('正在构建中...');
    const deployFC = require('@alicloud/fun/lib/commands/deploy');
    const { stdout } = await ssr_server_utils_1.execPromisify('npx fun build');
    console.log(stdout);
    deployFC({
        assumeYes: true,
        onlyConfig: false,
        ...argv
    });
};
