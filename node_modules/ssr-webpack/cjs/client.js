"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startClientBuild = exports.startClientServer = void 0;
const webpack = require("webpack");
const ssr_server_utils_1 = require("ssr-server-utils");
const promisify_1 = require("./utils/promisify");
// fork 后移除 webpack-dev-server 默认的启动 log，只展示服务端 Node.js 的启动监听端口
const WebpackDevServer = require('webpack-dev-server-ssr');
const config = ssr_server_utils_1.loadConfig();
const startClientServer = async (webpackConfig) => {
    const { webpackDevServerConfig, fePort, host } = config;
    return await new Promise((resolve) => {
        const compiler = webpack(webpackConfig);
        const server = new WebpackDevServer(compiler, webpackDevServerConfig);
        compiler.hooks.done.tap('DonePlugin', () => {
            resolve();
        });
        server.listen(fePort, host);
    });
};
exports.startClientServer = startClientServer;
const startClientBuild = async (webpackConfig) => {
    const { webpackStatsOption } = config;
    const stats = await promisify_1.webpackPromisify(webpackConfig);
    console.log(stats.toString(webpackStatsOption));
};
exports.startClientBuild = startClientBuild;
