"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.render = void 0;
const path_1 = require("path");
const server_1 = require("react-dom/server");
const ssr_server_utils_1 = require("ssr-server-utils");
const mergeStream = require('merge-stream');
const cwd = ssr_server_utils_1.getCwd();
const defaultConfig = ssr_server_utils_1.loadConfig();
async function render(ctx, options) {
    const config = Object.assign({}, defaultConfig, options !== null && options !== void 0 ? options : {});
    const { isDev, chunkName, stream } = config;
    const isLocal = isDev || process.env.NODE_ENV !== 'production';
    const serverFile = path_1.resolve(cwd, `./build/server/${chunkName !== null && chunkName !== void 0 ? chunkName : 'Page'}.server.js`);
    if (isLocal) {
        // clear cache in development environment
        delete require.cache[serverFile];
    }
    if (typeof ctx.response.type === 'function') {
        ctx.response.type('.html');
    }
    else {
        ctx.response.type = 'text/html';
    }
    const serverRender = require(serverFile).default;
    const serverRes = await serverRender(ctx, config);
    return stream ? mergeStream(new ssr_server_utils_1.StringToStream('<!DOCTYPE html>'), server_1.renderToNodeStream(serverRes)) : '<!DOCTYPE html>' + server_1.renderToString(serverRes);
}
exports.render = render;
