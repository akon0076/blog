"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const ReactDOM = require("react-dom");
const react_router_dom_1 = require("react-router-dom");
const ssr_client_utils_1 = require("ssr-client-utils");
const ssr_hoc_react_1 = require("ssr-hoc-react");
// @ts-expect-error
const Routes = require("ssr-temporary-routes");
const context_1 = require("./context");
const { FeRoutes, layoutFetch, App, BASE_NAME } = Routes;
const clientRender = async () => {
    var _a, _b;
    const IApp = App !== null && App !== void 0 ? App : function (props) {
        return props.children;
    };
    // 客户端渲染||hydrate
    const routes = await ssr_client_utils_1.preloadComponent(FeRoutes, BASE_NAME);
    ReactDOM[window.__USE_SSR__ ? 'hydrate' : 'render'](React.createElement(react_router_dom_1.BrowserRouter, { basename: BASE_NAME },
        React.createElement(context_1.AppContext, null,
            React.createElement(IApp, null,
                React.createElement(react_router_dom_1.Switch, null, 
                // 使用高阶组件wrapComponent使得csr首次进入页面以及csr/ssr切换路由时调用getInitialProps
                routes.map((item) => {
                    const { fetch, component, path } = item;
                    component.fetch = fetch;
                    component.layoutFetch = layoutFetch;
                    const WrappedComponent = ssr_hoc_react_1.wrapComponent(component);
                    return (React.createElement(react_router_dom_1.Route, { exact: true, key: path, path: path, render: () => React.createElement(WrappedComponent, { key: location.pathname }) }));
                }))))), document.getElementById('app'));
    if (!window.__USE_VITE__) {
        (_b = (_a = module === null || module === void 0 ? void 0 : module.hot) === null || _a === void 0 ? void 0 : _a.accept) === null || _b === void 0 ? void 0 : _b.call(_a); // webpack 场景下的 hmr
    }
};
exports.default = clientRender();
