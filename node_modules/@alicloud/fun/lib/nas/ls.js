'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const { sendCmdRequest, getNasHttpTriggerPath } = require('./request');
function generateLsCmd(nasPath, isAllOpt, isLongOpt) {
    let cmd = 'ls ' + (isAllOpt ? '-a ' : '') + (isLongOpt ? '-l ' : '') + nasPath;
    return cmd;
}
function ls(serviceName, nasPath, isAllOpt, isLongOpt) {
    return __awaiter(this, void 0, void 0, function* () {
        const nasHttpTriggerPath = getNasHttpTriggerPath(serviceName);
        const lsCmd = generateLsCmd(nasPath, isAllOpt, isLongOpt);
        const lsResponse = yield sendCmdRequest(nasHttpTriggerPath, lsCmd);
        console.log(lsResponse.data.stdout);
        console.log(lsResponse.data.stderr);
    });
}
module.exports = ls;
