'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const fs = require('fs-extra');
function makeTmpDir(tmpDir) {
    return __awaiter(this, void 0, void 0, function* () {
        let stats;
        let error;
        try {
            stats = yield fs.lstat(tmpDir);
        }
        catch (err) {
            error = err;
        }
        if (error || (!error && stats.isFile())) {
            yield fs.mkdirp(tmpDir);
            yield fs.chmod(tmpDir, 0o1777);
        }
    });
}
module.exports = {
    makeTmpDir
};
