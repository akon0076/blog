'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const fs = require('fs-extra');
const path = require('path');
function isFcConsoleApplication() {
    return process.env.FUN_CONSOLE_ENV
        && process.env.FUN_CONSOLE_ENV !== '0'
        && process.env.FUN_CONSOLE_ENV !== 'false';
}
function writePortFileForFcConsoleApplication(codeDir) {
    return __awaiter(this, void 0, void 0, function* () {
        yield fs.writeFile(path.join(codeDir, '.PORT'), '');
    });
}
module.exports = {
    writePortFileForFcConsoleApplication,
    isFcConsoleApplication
};
