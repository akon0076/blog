'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const path = require('path');
const fs = require('fs-extra');
const { downloadDjango } = require('./common/python');
const debug = require('debug')('fun:deploy');
const dlDjangoProcessor = {
    'type': 'function',
    'function': (codeDir) => __awaiter(this, void 0, void 0, function* () {
        const dotFunPath = path.join(codeDir, '.fun');
        yield fs.ensureDir(dotFunPath);
        yield downloadDjango(codeDir);
    })
};
function generateBootstrap(codeDir, prjName) {
    return __awaiter(this, void 0, void 0, function* () {
        const bootstrap = `#!/usr/bin/env bash
export UVICORN=/code/.fun/python/bin/uvicorn
export PORT=9000
$UVICORN --host 0.0.0.0 --port $PORT ${prjName}.asgi:application
`;
        yield fs.writeFile(path.join(codeDir, 'bootstrap'), bootstrap, {
            mode: '0755'
        });
    });
}
function detectProjectName(codeDir) {
    return __awaiter(this, void 0, void 0, function* () {
        const mgrPyContent = yield fs.readFile(path.join(codeDir, 'manage.py'));
        const match = /'DJANGO_SETTINGS_MODULE',\s+'(.+)\.settings'/.exec(mgrPyContent);
        if (match) {
            const prjName = match[1];
            debug(`detect Django project name is '${prjName}'`);
            return prjName;
        }
        throw new Error('Cannot detect project name from manage.py');
    });
}
const django = {
    'id': 'django',
    'runtime': 'python',
    'website': 'https://www.djangoproject.com/',
    'detectors': {
        'and': [
            {
                'type': 'regex',
                'path': 'manage.py',
                'content': '[Dd]jango'
            }
        ]
    },
    'actions': [
        {
            'condition': true,
            'description': 'download uvicorn and generate bootstrap',
            'processors': [
                dlDjangoProcessor,
                {
                    'type': 'function',
                    'function': (codeDir) => __awaiter(this, void 0, void 0, function* () {
                        const prjName = yield detectProjectName(codeDir);
                        yield generateBootstrap(codeDir, prjName);
                    })
                }
            ]
        }
    ]
};
module.exports = django;
