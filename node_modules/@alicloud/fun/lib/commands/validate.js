'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const fs = require('fs-extra');
const path = require('path');
const _validate = require('../validate/validate');
function validate(tplPath) {
    return __awaiter(this, void 0, void 0, function* () {
        if (tplPath === undefined || tplPath === 'template.[yaml|yml]') {
            tplPath = 'template.yaml';
            if (yield fs.pathExists('template.yml')) {
                tplPath = 'template.yml';
            }
        }
        let absTplPath = path.resolve(tplPath);
        if (!(yield fs.pathExists(tplPath))) {
            console.error(`Can't find template file at ${absTplPath}.`);
            return;
        }
        yield _validate(absTplPath);
    });
}
module.exports = validate;
