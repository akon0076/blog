'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const { detectTplPath, validateTplName } = require('../tpl');
const { red } = require('colors');
function pack(options) {
    return __awaiter(this, void 0, void 0, function* () {
        let tplPath = options.template;
        const bucket = options.ossBucket;
        const useNas = options.useNas;
        const outputTemplateFile = options.outputTemplateFile;
        const pushRegistry = options.pushRegistry;
        if (!tplPath) {
            tplPath = yield detectTplPath();
        }
        if (!tplPath) {
            throw new Error(red('Current folder not a fun project.'));
        }
        validateTplName(tplPath);
        const assumeYes = options.assumeYes;
        yield require('../package/package').pack(tplPath, bucket, outputTemplateFile, useNas, pushRegistry, assumeYes);
    });
}
module.exports = pack;
